[==========] Running 15 tests from 6 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BFS
[ RUN      ] BFS.Insert
[       OK ] BFS.Insert (0 ms)
[----------] 1 test from BFS (0 ms total)

[----------] 1 test from EngineTest
[ RUN      ] EngineTest.GeneratorSuccessor
[       OK ] EngineTest.GeneratorSuccessor (0 ms)
[----------] 1 test from EngineTest (0 ms total)

[----------] 1 test from MissionaryTest
[ RUN      ] MissionaryTest.GenerateSuccssors
This is to test generating successors: 
Current State: 
[xxxooo|_    |      ]
Successor States: 
(trans 0 Missionaries, 1 Cannibals)	[xxooo |    -|x     ]
(trans 0 Missionaries, 2 Cannibals)	[xooo  |    -|xx    ]
(trans 1 Missionaries, 1 Cannibals)	[xxoo  |    -|xo    ]
[       OK ] MissionaryTest.GenerateSuccssors (0 ms)
[----------] 1 test from MissionaryTest (0 ms total)

[----------] 5 tests from OpenDoorsTest
[ RUN      ] OpenDoorsTest.Direction
[       OK ] OpenDoorsTest.Direction (0 ms)
[ RUN      ] OpenDoorsTest.HitWall
[       OK ] OpenDoorsTest.HitWall (0 ms)
[ RUN      ] OpenDoorsTest.HitDoor
[       OK ] OpenDoorsTest.HitDoor (0 ms)
[ RUN      ] OpenDoorsTest.LoadMap
                    ~1 0 0 1   1 0 1 0   1 0 0 0   1 0 1 0   1 0-0 0   1 0 1 0   1 1 0 0  
                     0 1 0 1             0 1 0 1             0 1 0 1            x0 1 0 1  
 1 0 0 1   1 0-0 0   0-0 0 0   1 0 1 0   0 0-0 0   1 0=1 0   0-0 1 0   1 0 1 0   0 1 1 0  
 0-0 0 1  @0 0 0 0   0-1 0 0             0=1 0 1                                          
 0 0 1 1   0 0 1 0   0 0 1 0   1 0 1 0  .0 1 1 0                                          
[       OK ] OpenDoorsTest.LoadMap (1 ms)
[ RUN      ] OpenDoorsTest.GenerateSuccessors
This is to test generating successors: 
Current State: 
                    ~1 0 0 1   1 0 1 0   1 0 0 0   1 0 1 0   1 0-0 0   1 0 1 0   1 1 0 0  
                     0 1 0 1             0 1 0 1             0 1 0 1            x0 1 0 1  
 1 0 0 1   1 0-0 0   0-0 0 0   1 0 1 0   0 0-0 0   1 0=1 0   0-0 1 0   1 0 1 0   0 1 1 0  
 0-0 0 1  @0 0 0 0   0-1 0 0             0=1 0 1                                          
 0 0 1 1   0 0 1 0   0 0 1 0   1 0 1 0  .0 1 1 0                                          

Successor States: 
[N]	                    ~1 0 0 1   1 0 1 0   1 0 0 0   1 0 1 0   1 0-0 0   1 0 1 0   1 1 0 0  
                     0 1 0 1             0 1 0 1             0 1 0 1            x0 1 0 1  
 1 0 0 1   1 0-0 0   0-0 0 0   1 0 1 0   0 0-0 0   1 0=1 0   0-0 1 0   1 0 1 0   0 1 1 0  
 0-0 0 1  @0 0 0 0   0-1 0 0            .0=1 0 1                                          
 0 0 1 1   0 0 1 0   0 0 1 0   1 0 1 0   0 1 1 0                                          

[W]	                    ~1 0 0 1   1 0 1 0   1 0 0 0   1 0 1 0   1 0-0 0   1 0 1 0   1 1 0 0  
                     0 1 0 1             0 1 0 1             0 1 0 1            x0 1 0 1  
 1 0 0 1   1 0-0 0   0-0 0 0   1 0 1 0   0 0-0 0   1 0=1 0   0-0 1 0   1 0 1 0   0 1 1 0  
 0-0 0 1  @0 0 0 0   0-1 0 0             0=1 0 1                                          
 0 0 1 1   0 0 1 0   0 0 1 0  .1 0 1 0   0 1 1 0                                          

[       OK ] OpenDoorsTest.GenerateSuccessors (1 ms)
[----------] 5 tests from OpenDoorsTest (2 ms total)

[----------] 3 tests from SlidingTest
[ RUN      ] SlidingTest.GoalTest
[       OK ] SlidingTest.GoalTest (0 ms)
[ RUN      ] SlidingTest.EqualTest
[       OK ] SlidingTest.EqualTest (0 ms)
[ RUN      ] SlidingTest.GenerateSuccessors
This is to test generating successors: 
Current State: 
  7 - 1 
  8 5 2 
  6 4 3 

Successor States: 
[E]
  7 1 - 
  8 5 2 
  6 4 3 

[S]
  7 5 1 
  8 - 2 
  6 4 3 

[W]
  - 7 1 
  8 5 2 
  6 4 3 

[       OK ] SlidingTest.GenerateSuccessors (0 ms)
[----------] 3 tests from SlidingTest (0 ms total)

[----------] 4 tests from Sudoku
[ RUN      ] Sudoku.GenerateSuccessors
This is to test generating successors: 
Current State: 
_ 3 _ 1 
_ 1 _ 4 
3 4 1 2 
_ _ 4 _ 

Successor States: 
Place 2 at (0, 0)
2 3 _ 1 
_ 1 _ 4 
3 4 1 2 
_ _ 4 _ 

Place 4 at (0, 0)
4 3 _ 1 
_ 1 _ 4 
3 4 1 2 
_ _ 4 _ 

Place 2 at (0, 2)
_ 3 2 1 
_ 1 _ 4 
3 4 1 2 
_ _ 4 _ 

Place 2 at (1, 0)
_ 3 _ 1 
2 1 _ 4 
3 4 1 2 
_ _ 4 _ 

Place 2 at (1, 2)
_ 3 _ 1 
_ 1 2 4 
3 4 1 2 
_ _ 4 _ 

Place 3 at (1, 2)
_ 3 _ 1 
_ 1 3 4 
3 4 1 2 
_ _ 4 _ 

Place 1 at (3, 0)
_ 3 _ 1 
_ 1 _ 4 
3 4 1 2 
1 _ 4 _ 

Place 2 at (3, 0)
_ 3 _ 1 
_ 1 _ 4 
3 4 1 2 
2 _ 4 _ 

Place 2 at (3, 1)
_ 3 _ 1 
_ 1 _ 4 
3 4 1 2 
_ 2 4 _ 

Place 3 at (3, 3)
_ 3 _ 1 
_ 1 _ 4 
3 4 1 2 
_ _ 4 3 

[       OK ] Sudoku.GenerateSuccessors (1 ms)
[ RUN      ] Sudoku.GoalTest
[       OK ] Sudoku.GoalTest (10 ms)
[ RUN      ] Sudoku.NextState
[       OK ] Sudoku.NextState (0 ms)
[ RUN      ] Sudoku.General
[       OK ] Sudoku.General (0 ms)
[----------] 4 tests from Sudoku (11 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 6 test cases ran. (13 ms total)
[  PASSED  ] 15 tests.
